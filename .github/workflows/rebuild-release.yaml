# Copyright 2024 Iguazio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Rebuild Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to rebuild (e.g., 11.5.6-v0). Leave empty to use latest release.'
        required: false
        type: string
      use_cache:
        description: 'Use Docker cache during build (faster, only rebuilds OS packages layer)'
        required: false
        type: boolean
        default: true

permissions:
  contents: read

jobs:
  get-release-tag:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.determine-tag.outputs.release_tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get latest release tag
      id: get-latest
      if: ${{ inputs.release_tag == '' }}
      uses: actions/github-script@v7
      with:
        script: |
          const { data: release } = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          return release.tag_name;

    - name: Determine release tag
      id: determine-tag
      run: |
        if [ -n "${{ inputs.release_tag }}" ]; then
          echo "release_tag=${{ inputs.release_tag }}" >> $GITHUB_OUTPUT
          echo "Using provided release tag: ${{ inputs.release_tag }}"
        else
          echo "release_tag=${{ steps.get-latest.outputs.result }}" >> $GITHUB_OUTPUT
          echo "Using latest release tag: ${{ steps.get-latest.outputs.result }}"
        fi

  rebuild:
    runs-on: ubuntu-latest
    needs: get-release-tag
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.get-release-tag.outputs.release_tag }}

    - name: Login to GCR
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # 3.4.0
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCR_IGUAZIO_JSON_KEY }}

    - name: Build and push
      run: |
        if [ "${{ inputs.use_cache }}" == "true" ]; then
          echo "Building with Docker cache enabled..."
        else
          echo "Building without Docker cache..."
        fi
        make release
      env:
        GRAFANA_VERSION: ${{ needs.get-release-tag.outputs.release_tag }}
        CACHE_FROM: ${{ inputs.use_cache && 'true' || '' }}
        DOCKER_BUILDKIT: 1

    - name: Summary
      run: |
        echo "## Rebuild Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Tag**: ${{ needs.get-release-tag.outputs.release_tag }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Use Cache**: ${{ inputs.use_cache }}" >> $GITHUB_STEP_SUMMARY
        if [ "${{ inputs.use_cache }}" == "true" ]; then
          echo "- **Build Method**: Used Docker cache (only OS packages layer rebuilt)" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Build Method**: Full rebuild without cache" >> $GITHUB_STEP_SUMMARY
        fi
        echo "- **Image**: gcr.io/iguazio/grafana-wplugins:${{ needs.get-release-tag.outputs.release_tag }}" >> $GITHUB_STEP_SUMMARY
